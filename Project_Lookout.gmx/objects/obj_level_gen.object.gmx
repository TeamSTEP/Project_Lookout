<!--This Document is generated by GameMaker, if you edit it by hand then you do so at your own risk!-->
<object>
  <spriteName>&lt;undefined&gt;</spriteName>
  <solid>0</solid>
  <visible>-1</visible>
  <depth>0</depth>
  <persistent>0</persistent>
  <parentName>&lt;undefined&gt;</parentName>
  <maskName>&lt;undefined&gt;</maskName>
  <events>
    <event eventtype="0" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Generate random map
if (global.game_mode == 'Run'){
    randomize();
    cellsize = CELLSIZE;
    room_width = cellsize * irandom_range(18,25);
    room_height = cellsize * irandom_range(18,25);
    enemy_rate = irandom_range(20,35); //the spawn rate is 1/n
    reps = irandom(1000);
    carver = irandom(2);
    carversize = irandom(4);
    dirfrequency = irandom(15);
    //roomsizeaverage = choose(4,8,10,12,14);
    roomsizeaverage = 4;
    roomfrequency = irandom(100);
    rooms = irandom_range(5, 40);
    hallwaysize = choose(2,3);
    padding = choose(2,4,8,10);
    global.dark = choose(true,false);
    
    room_type = choose(1,2,3);
    //room_type = 1;
    switch(room_type){
        case (1):
            scr_create_dungeon(cellsize, reps, carver, carversize);
        break;
        
        case(2):
            scr_create_dungeon2(cellsize, reps, dirfrequency, roomsizeaverage, roomfrequency);
        break;
        
        case(3):
            scr_create_dungeon3(cellsize, rooms, roomsizeaverage, hallwaysize, padding);
        break;
        
        case(4):
            scr_create_dungeon4(cellsize, rooms, roomsizeaverage, roomsizeaverage/2);
        break;
    }
    //Create the grid for motion planning
    width = room_width div (cellsize/2);
    height = room_height div (cellsize/2);
    global.mp_grid = mp_grid_create(0,0,width, height, cellsize/2, cellsize/2);
    scr_scan_mp_grid(global.mp_grid, cellsize/2);
    //Create the enemies in the room
    scr_spawn_objects(cellsize,enemy_rate);
    
    //Restart the room if there are no enemy
    if (instance_number(obj_par_collision)-1 == 0){
        show_debug_message("Spawned no enemies, restarting");
        room_restart();
    }
}
</string>
          </argument>
        </arguments>
      </action>
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Settings for the run mode

global.player.hp = 30;

</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="3" enumb="0">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Start a new map if everyone is dead

var enemies = instance_number(obj_par_collision) - 1;
if (global.control &amp;&amp; enemies &lt;= 0){
    show_debug_message("Enemy all cleared, restarting room");
    room_restart();
}
</string>
          </argument>
        </arguments>
      </action>
    </event>
    <event eventtype="7" enumb="5">
      <action>
        <libid>1</libid>
        <id>603</id>
        <kind>7</kind>
        <userelative>0</userelative>
        <isquestion>0</isquestion>
        <useapplyto>-1</useapplyto>
        <exetype>2</exetype>
        <functionname></functionname>
        <codestring></codestring>
        <whoName>self</whoName>
        <relative>0</relative>
        <isnot>0</isnot>
        <arguments>
          <argument>
            <kind>1</kind>
            <string>///Clear the grid
ds_grid_destroy(global.ds_grid);
</string>
          </argument>
        </arguments>
      </action>
    </event>
  </events>
  <PhysicsObject>0</PhysicsObject>
  <PhysicsObjectSensor>0</PhysicsObjectSensor>
  <PhysicsObjectShape>0</PhysicsObjectShape>
  <PhysicsObjectDensity>0.5</PhysicsObjectDensity>
  <PhysicsObjectRestitution>0.100000001490116</PhysicsObjectRestitution>
  <PhysicsObjectGroup>0</PhysicsObjectGroup>
  <PhysicsObjectLinearDamping>0.100000001490116</PhysicsObjectLinearDamping>
  <PhysicsObjectAngularDamping>0.100000001490116</PhysicsObjectAngularDamping>
  <PhysicsObjectFriction>0.200000002980232</PhysicsObjectFriction>
  <PhysicsObjectAwake>-1</PhysicsObjectAwake>
  <PhysicsObjectKinematic>0</PhysicsObjectKinematic>
  <PhysicsShapePoints/>
</object>
